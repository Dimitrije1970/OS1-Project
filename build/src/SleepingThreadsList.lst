GAS LISTING /tmp/ccwaWI4b.s 			page 1


   1              		.file	"SleepingThreadsList.cpp"
   2              		.option pic
   3              		.option norelax
   4              		.text
   5              	.Ltext0:
   6              		.align	2
   7              		.globl	_ZN19SleepingThreadsList14dec_time_firstEv
   9              	_ZN19SleepingThreadsList14dec_time_firstEv:
  10              	.LFB38:
  11              		.file 1 "src/SleepingThreadsList.cpp"
   1:src/SleepingThreadsList.cpp **** #include "../h/SleepingThreadsList.hpp"
   2:src/SleepingThreadsList.cpp **** 
   3:src/SleepingThreadsList.cpp **** void SleepingThreadsList::dec_time_first() {
  12              		.loc 1 3 44
  13              		.cfi_startproc
  14              	.LVL0:
  15 0000 130101FF 		addi	sp,sp,-16
  16              		.cfi_def_cfa_offset 16
  17 0004 23348100 		sd	s0,8(sp)
  18              		.cfi_offset 8, -8
  19 0008 13040101 		addi	s0,sp,16
  20              		.cfi_def_cfa 8, 0
   4:src/SleepingThreadsList.cpp ****     if(head != nullptr){
  21              		.loc 1 4 5
  22              		.loc 1 4 8 is_stmt 0
  23 000c 83370500 		ld	a5,0(a0)
  24              		.loc 1 4 5
  25 0010 63880700 		beqz	a5,.L1
   5:src/SleepingThreadsList.cpp ****         head->slice-=1;
  26              		.loc 1 5 9 is_stmt 1
  27              		.loc 1 5 20 is_stmt 0
  28 0014 03B78700 		ld	a4,8(a5)
  29 0018 1307F7FF 		addi	a4,a4,-1
  30 001c 23B4E700 		sd	a4,8(a5)
  31              	.L1:
   6:src/SleepingThreadsList.cpp ****     }
   7:src/SleepingThreadsList.cpp **** }
  32              		.loc 1 7 1
  33 0020 03348100 		ld	s0,8(sp)
  34              		.cfi_restore 8
  35              		.cfi_def_cfa 2, 16
  36 0024 13010101 		addi	sp,sp,16
  37              		.cfi_def_cfa_offset 0
  38 0028 67800000 		jr	ra
  39              		.cfi_endproc
  40              	.LFE38:
  42              		.align	2
  43              		.globl	_ZN19SleepingThreadsList15peek_time_firstEv
  45              	_ZN19SleepingThreadsList15peek_time_firstEv:
  46              	.LFB39:
   8:src/SleepingThreadsList.cpp **** 
   9:src/SleepingThreadsList.cpp **** time_t SleepingThreadsList::peek_time_first() {
  47              		.loc 1 9 47 is_stmt 1
  48              		.cfi_startproc
  49              	.LVL1:
  50 002c 130101FF 		addi	sp,sp,-16
  51              		.cfi_def_cfa_offset 16
GAS LISTING /tmp/ccwaWI4b.s 			page 2


  52 0030 23348100 		sd	s0,8(sp)
  53              		.cfi_offset 8, -8
  54 0034 13040101 		addi	s0,sp,16
  55              		.cfi_def_cfa 8, 0
  10:src/SleepingThreadsList.cpp ****     if(!head) {
  56              		.loc 1 10 5
  57              		.loc 1 10 9 is_stmt 0
  58 0038 83370500 		ld	a5,0(a0)
  59              		.loc 1 10 5
  60 003c 638A0700 		beqz	a5,.L6
  11:src/SleepingThreadsList.cpp ****         return -1;
  12:src/SleepingThreadsList.cpp ****     }
  13:src/SleepingThreadsList.cpp ****     return head->slice;
  61              		.loc 1 13 5 is_stmt 1
  62              		.loc 1 13 18 is_stmt 0
  63 0040 03B58700 		ld	a0,8(a5)
  64              	.LVL2:
  65              	.L4:
  14:src/SleepingThreadsList.cpp **** }
  66              		.loc 1 14 1
  67 0044 03348100 		ld	s0,8(sp)
  68              		.cfi_remember_state
  69              		.cfi_restore 8
  70              		.cfi_def_cfa 2, 16
  71 0048 13010101 		addi	sp,sp,16
  72              		.cfi_def_cfa_offset 0
  73 004c 67800000 		jr	ra
  74              	.LVL3:
  75              	.L6:
  76              		.cfi_restore_state
  11:src/SleepingThreadsList.cpp ****         return -1;
  77              		.loc 1 11 17
  78 0050 1305F0FF 		li	a0,-1
  79              	.LVL4:
  80 0054 6FF01FFF 		j	.L4
  81              		.cfi_endproc
  82              	.LFE39:
  84              		.align	2
  85              		.globl	_ZN19SleepingThreadsList15remove_finishedEv
  87              	_ZN19SleepingThreadsList15remove_finishedEv:
  88              	.LFB40:
  15:src/SleepingThreadsList.cpp **** 
  16:src/SleepingThreadsList.cpp **** void SleepingThreadsList::remove_finished() {
  89              		.loc 1 16 45 is_stmt 1
  90              		.cfi_startproc
  91              	.LVL5:
  92 0058 130101FE 		addi	sp,sp,-32
  93              		.cfi_def_cfa_offset 32
  94 005c 233C1100 		sd	ra,24(sp)
  95 0060 23388100 		sd	s0,16(sp)
  96 0064 23349100 		sd	s1,8(sp)
  97 0068 23302101 		sd	s2,0(sp)
  98              		.cfi_offset 1, -8
  99              		.cfi_offset 8, -16
 100              		.cfi_offset 9, -24
 101              		.cfi_offset 18, -32
 102 006c 13040102 		addi	s0,sp,32
GAS LISTING /tmp/ccwaWI4b.s 			page 3


 103              		.cfi_def_cfa 8, 0
 104 0070 13090500 		mv	s2,a0
 105 0074 6F008002 		j	.L11
 106              	.LVL6:
 107              	.L13:
 108              	.LBB5:
  17:src/SleepingThreadsList.cpp ****     while(head != nullptr && head->slice <= 0){
  18:src/SleepingThreadsList.cpp ****         Node* elem = head;
  19:src/SleepingThreadsList.cpp ****         head = head->next;
  20:src/SleepingThreadsList.cpp ****         if(!head) {tail = nullptr;}
 109              		.loc 1 20 20 discriminator 1
 110              		.loc 1 20 25 is_stmt 0 discriminator 1
 111 0078 23340900 		sd	zero,8(s2)
 112              	.L10:
  21:src/SleepingThreadsList.cpp ****         elem->thread->set_sleeping(false);
 113              		.loc 1 21 9 is_stmt 1
 114              		.loc 1 21 15 is_stmt 0
 115 007c 83B70400 		ld	a5,0(s1)
 116              	.LVL7:
 117              	.LBB6:
 118              	.LBB7:
 119              		.file 2 "src/../h/../h/tcb.hpp"
   1:src/../h/../h/tcb.hpp **** #ifndef PROJECT_BASE_V1_1_TCB_HPP
   2:src/../h/../h/tcb.hpp **** #define PROJECT_BASE_V1_1_TCB_HPP
   3:src/../h/../h/tcb.hpp **** 
   4:src/../h/../h/tcb.hpp **** #include "../lib/hw.h"
   5:src/../h/../h/tcb.hpp **** #include "../h/scheduler.hpp"
   6:src/../h/../h/tcb.hpp **** #include "../h/riscv.hpp"
   7:src/../h/../h/tcb.hpp **** 
   8:src/../h/../h/tcb.hpp **** class TCB{
   9:src/../h/../h/tcb.hpp **** private:
  10:src/../h/../h/tcb.hpp ****     struct Context{
  11:src/../h/../h/tcb.hpp ****         uint64 sp, ra;
  12:src/../h/../h/tcb.hpp ****     };
  13:src/../h/../h/tcb.hpp **** 
  14:src/../h/../h/tcb.hpp ****     using Body = void(*)(void*);
  15:src/../h/../h/tcb.hpp ****     Body body;
  16:src/../h/../h/tcb.hpp ****     void* args;
  17:src/../h/../h/tcb.hpp **** 
  18:src/../h/../h/tcb.hpp ****     uint64* stack;
  19:src/../h/../h/tcb.hpp ****     Context context;
  20:src/../h/../h/tcb.hpp **** 
  21:src/../h/../h/tcb.hpp ****     time_t time_slice;
  22:src/../h/../h/tcb.hpp ****     int id;
  23:src/../h/../h/tcb.hpp ****     bool finished, blocked, sleeping, main, user_mode;
  24:src/../h/../h/tcb.hpp **** 
  25:src/../h/../h/tcb.hpp ****     TCB(Body body, void* args, uint64 time_slice, uint64* stack) :
  26:src/../h/../h/tcb.hpp ****         body(body),
  27:src/../h/../h/tcb.hpp ****         args(args),
  28:src/../h/../h/tcb.hpp ****         stack(body != nullptr ? stack : nullptr),
  29:src/../h/../h/tcb.hpp ****         context({(uint64) &thread_wrapper, stack != nullptr ? reinterpret_cast<uint64>(&stack[DEFAU
  30:src/../h/../h/tcb.hpp ****         time_slice(time_slice),
  31:src/../h/../h/tcb.hpp ****         id(ID),
  32:src/../h/../h/tcb.hpp ****         finished(false),
  33:src/../h/../h/tcb.hpp ****         blocked(false),
  34:src/../h/../h/tcb.hpp ****         sleeping(false),
  35:src/../h/../h/tcb.hpp ****         main(body == nullptr){
GAS LISTING /tmp/ccwaWI4b.s 			page 4


  36:src/../h/../h/tcb.hpp **** 
  37:src/../h/../h/tcb.hpp ****         if(body != nullptr){
  38:src/../h/../h/tcb.hpp ****             Scheduler::put(this);
  39:src/../h/../h/tcb.hpp ****         }
  40:src/../h/../h/tcb.hpp **** 
  41:src/../h/../h/tcb.hpp ****     }
  42:src/../h/../h/tcb.hpp **** 
  43:src/../h/../h/tcb.hpp ****     static time_t time_slice_counter;
  44:src/../h/../h/tcb.hpp **** 
  45:src/../h/../h/tcb.hpp ****     static void contextSwitch(Context* old_context, Context* new_context);
  46:src/../h/../h/tcb.hpp ****     static void thread_wrapper();
  47:src/../h/../h/tcb.hpp ****     static void dispatch();
  48:src/../h/../h/tcb.hpp **** public:
  49:src/../h/../h/tcb.hpp ****     friend class RiscV;
  50:src/../h/../h/tcb.hpp ****     friend class sem;
  51:src/../h/../h/tcb.hpp **** 
  52:src/../h/../h/tcb.hpp ****     static int ID;
  53:src/../h/../h/tcb.hpp ****     static TCB* running;
  54:src/../h/../h/tcb.hpp ****     static TCB* create_thread(TCB** handle, Body body, void* args, uint64* stack);
  55:src/../h/../h/tcb.hpp ****     static void yield();
  56:src/../h/../h/tcb.hpp ****     static void join(TCB*);
  57:src/../h/../h/tcb.hpp ****     static void outputThreadBody(void*);
  58:src/../h/../h/tcb.hpp **** 
  59:src/../h/../h/tcb.hpp **** //    void start(){
  60:src/../h/../h/tcb.hpp **** //        Scheduler::put(this);
  61:src/../h/../h/tcb.hpp **** //    }
  62:src/../h/../h/tcb.hpp **** 
  63:src/../h/../h/tcb.hpp ****     bool is_finished() const { return finished; }
  64:src/../h/../h/tcb.hpp ****     void set_finished(bool f) { this->finished = f; }
  65:src/../h/../h/tcb.hpp **** 
  66:src/../h/../h/tcb.hpp ****     bool is_sleeping() const { return sleeping; }
  67:src/../h/../h/tcb.hpp ****     void set_sleeping(bool s) { this->sleeping = s; }
 120              		.loc 2 67 33 is_stmt 1
 121              		.loc 2 67 48 is_stmt 0
 122 0080 238B0702 		sb	zero,54(a5)
 123              	.LVL8:
 124              	.LBE7:
 125              	.LBE6:
  22:src/SleepingThreadsList.cpp ****         Scheduler::put(elem->thread);
 126              		.loc 1 22 9 is_stmt 1
 127              		.loc 1 22 23 is_stmt 0
 128 0084 03B50400 		ld	a0,0(s1)
 129 0088 97000000 		call	_ZN9Scheduler3putEP3TCB@plt
 129      E7800000 
 130              	.LVL9:
  23:src/SleepingThreadsList.cpp ****         __mem_free(elem);
 131              		.loc 1 23 9 is_stmt 1
 132              		.loc 1 23 19 is_stmt 0
 133 0090 13850400 		mv	a0,s1
 134 0094 97000000 		call	__mem_free@plt
 134      E7800000 
 135              	.LVL10:
 136              	.L11:
 137              	.LBE5:
  17:src/SleepingThreadsList.cpp ****         Node* elem = head;
 138              		.loc 1 17 5 is_stmt 1
  17:src/SleepingThreadsList.cpp ****         Node* elem = head;
GAS LISTING /tmp/ccwaWI4b.s 			page 5


 139              		.loc 1 17 27
  17:src/SleepingThreadsList.cpp ****         Node* elem = head;
 140              		.loc 1 17 11 is_stmt 0
 141 009c 83340900 		ld	s1,0(s2)
  17:src/SleepingThreadsList.cpp ****         Node* elem = head;
 142              		.loc 1 17 27
 143 00a0 638E0400 		beqz	s1,.L8
  17:src/SleepingThreadsList.cpp ****         Node* elem = head;
 144              		.loc 1 17 36 discriminator 1
 145 00a4 83B78400 		ld	a5,8(s1)
  17:src/SleepingThreadsList.cpp ****         Node* elem = head;
 146              		.loc 1 17 27 discriminator 1
 147 00a8 639A0700 		bnez	a5,.L8
 148              	.LBB8:
  18:src/SleepingThreadsList.cpp ****         head = head->next;
 149              		.loc 1 18 9 is_stmt 1
 150              	.LVL11:
  19:src/SleepingThreadsList.cpp ****         if(!head) {tail = nullptr;}
 151              		.loc 1 19 9
  19:src/SleepingThreadsList.cpp ****         if(!head) {tail = nullptr;}
 152              		.loc 1 19 22 is_stmt 0
 153 00ac 83B70401 		ld	a5,16(s1)
  19:src/SleepingThreadsList.cpp ****         if(!head) {tail = nullptr;}
 154              		.loc 1 19 14
 155 00b0 2330F900 		sd	a5,0(s2)
  20:src/SleepingThreadsList.cpp ****         elem->thread->set_sleeping(false);
 156              		.loc 1 20 9 is_stmt 1
 157 00b4 E39407FC 		bnez	a5,.L10
 158 00b8 6FF01FFC 		j	.L13
 159              	.LVL12:
 160              	.L8:
 161              	.LBE8:
  24:src/SleepingThreadsList.cpp ****     }
  25:src/SleepingThreadsList.cpp **** }
 162              		.loc 1 25 1 is_stmt 0
 163 00bc 83308101 		ld	ra,24(sp)
 164              		.cfi_restore 1
 165 00c0 03340101 		ld	s0,16(sp)
 166              		.cfi_restore 8
 167              		.cfi_def_cfa 2, 32
 168 00c4 83348100 		ld	s1,8(sp)
 169              		.cfi_restore 9
 170 00c8 03390100 		ld	s2,0(sp)
 171              		.cfi_restore 18
 172              	.LVL13:
 173 00cc 13010102 		addi	sp,sp,32
 174              		.cfi_def_cfa_offset 0
 175 00d0 67800000 		jr	ra
 176              		.cfi_endproc
 177              	.LFE40:
 179              		.align	2
 180              		.globl	_ZN19SleepingThreadsList3putEP3TCBm
 182              	_ZN19SleepingThreadsList3putEP3TCBm:
 183              	.LFB41:
  26:src/SleepingThreadsList.cpp **** 
  27:src/SleepingThreadsList.cpp **** void SleepingThreadsList::put(TCB *thread, time_t slice) {
 184              		.loc 1 27 58 is_stmt 1
GAS LISTING /tmp/ccwaWI4b.s 			page 6


 185              		.cfi_startproc
 186              	.LVL14:
 187 00d4 130101FC 		addi	sp,sp,-64
 188              		.cfi_def_cfa_offset 64
 189 00d8 233C1102 		sd	ra,56(sp)
 190 00dc 23388102 		sd	s0,48(sp)
 191 00e0 23349102 		sd	s1,40(sp)
 192 00e4 23302103 		sd	s2,32(sp)
 193 00e8 233C3101 		sd	s3,24(sp)
 194 00ec 23384101 		sd	s4,16(sp)
 195 00f0 23345101 		sd	s5,8(sp)
 196              		.cfi_offset 1, -8
 197              		.cfi_offset 8, -16
 198              		.cfi_offset 9, -24
 199              		.cfi_offset 18, -32
 200              		.cfi_offset 19, -40
 201              		.cfi_offset 20, -48
 202              		.cfi_offset 21, -56
 203 00f4 13040104 		addi	s0,sp,64
 204              		.cfi_def_cfa 8, 0
 205 00f8 130A0500 		mv	s4,a0
 206 00fc 938A0500 		mv	s5,a1
 207 0100 13090600 		mv	s2,a2
  28:src/SleepingThreadsList.cpp ****     if(head == nullptr){
 208              		.loc 1 28 5
 209              	.LBB9:
 210              		.loc 1 28 8 is_stmt 0
 211 0104 83340500 		ld	s1,0(a0)
 212              		.loc 1 28 5
 213 0108 63840402 		beqz	s1,.L26
 214              	.LBB10:
  29:src/SleepingThreadsList.cpp ****         head = (Node*) __mem_alloc(sizeof(Node));
  30:src/SleepingThreadsList.cpp ****         head->thread = thread;
  31:src/SleepingThreadsList.cpp ****         head->next = nullptr;
  32:src/SleepingThreadsList.cpp ****         head->slice = slice;
  33:src/SleepingThreadsList.cpp ****         tail = head;
  34:src/SleepingThreadsList.cpp ****     } else {
  35:src/SleepingThreadsList.cpp ****         Node* temp = head;
  36:src/SleepingThreadsList.cpp ****         Node* prev = nullptr;
 215              		.loc 1 36 15
 216 010c 93090000 		li	s3,0
 217              	.LVL15:
 218              	.L15:
  37:src/SleepingThreadsList.cpp ****         while(temp != tail && slice >= temp->slice){
 219              		.loc 1 37 9 is_stmt 1
 220              		.loc 1 37 28
 221              		.loc 1 37 23 is_stmt 0
 222 0110 03378A00 		ld	a4,8(s4)
 223              		.loc 1 37 28
 224 0114 63069704 		beq	a4,s1,.L17
 225              		.loc 1 37 46 discriminator 1
 226 0118 83B78400 		ld	a5,8(s1)
 227              		.loc 1 37 28 discriminator 1
 228 011c 6362F904 		bgtu	a5,s2,.L17
  38:src/SleepingThreadsList.cpp ****             slice -= temp->slice;
 229              		.loc 1 38 13 is_stmt 1
 230              		.loc 1 38 19 is_stmt 0
GAS LISTING /tmp/ccwaWI4b.s 			page 7


 231 0120 3309F940 		sub	s2,s2,a5
 232              	.LVL16:
  39:src/SleepingThreadsList.cpp ****             prev = temp;
 233              		.loc 1 39 13 is_stmt 1
  40:src/SleepingThreadsList.cpp ****             temp = temp->next;
 234              		.loc 1 40 13
  39:src/SleepingThreadsList.cpp ****             prev = temp;
 235              		.loc 1 39 18 is_stmt 0
 236 0124 93890400 		mv	s3,s1
 237              		.loc 1 40 18
 238 0128 83B40401 		ld	s1,16(s1)
 239              	.LVL17:
  37:src/SleepingThreadsList.cpp ****             slice -= temp->slice;
 240              		.loc 1 37 9
 241 012c 6FF05FFE 		j	.L15
 242              	.LVL18:
 243              	.L26:
 244              	.LBE10:
  29:src/SleepingThreadsList.cpp ****         head->thread = thread;
 245              		.loc 1 29 9 is_stmt 1
  29:src/SleepingThreadsList.cpp ****         head->thread = thread;
 246              		.loc 1 29 35 is_stmt 0
 247 0130 13058001 		li	a0,24
 248              	.LVL19:
 249 0134 97000000 		call	__mem_alloc@plt
 249      E7800000 
 250              	.LVL20:
  29:src/SleepingThreadsList.cpp ****         head->thread = thread;
 251              		.loc 1 29 14
 252 013c 2330AA00 		sd	a0,0(s4)
  30:src/SleepingThreadsList.cpp ****         head->next = nullptr;
 253              		.loc 1 30 9 is_stmt 1
  30:src/SleepingThreadsList.cpp ****         head->next = nullptr;
 254              		.loc 1 30 22 is_stmt 0
 255 0140 23305501 		sd	s5,0(a0)
  31:src/SleepingThreadsList.cpp ****         head->slice = slice;
 256              		.loc 1 31 9 is_stmt 1
 257 0144 83370A00 		ld	a5,0(s4)
  31:src/SleepingThreadsList.cpp ****         head->slice = slice;
 258              		.loc 1 31 20 is_stmt 0
 259 0148 23B80700 		sd	zero,16(a5)
  32:src/SleepingThreadsList.cpp ****         tail = head;
 260              		.loc 1 32 9 is_stmt 1
 261 014c 83370A00 		ld	a5,0(s4)
  32:src/SleepingThreadsList.cpp ****         tail = head;
 262              		.loc 1 32 21 is_stmt 0
 263 0150 23B42701 		sd	s2,8(a5)
  33:src/SleepingThreadsList.cpp ****     } else {
 264              		.loc 1 33 9 is_stmt 1
  33:src/SleepingThreadsList.cpp ****     } else {
 265              		.loc 1 33 16 is_stmt 0
 266 0154 83370A00 		ld	a5,0(s4)
  33:src/SleepingThreadsList.cpp ****     } else {
 267              		.loc 1 33 14
 268 0158 2334FA00 		sd	a5,8(s4)
 269 015c 6F004003 		j	.L14
 270              	.LVL21:
GAS LISTING /tmp/ccwaWI4b.s 			page 8


 271              	.L17:
 272              	.LBB18:
  41:src/SleepingThreadsList.cpp ****         }
  42:src/SleepingThreadsList.cpp ****         if(temp == tail) {
 273              		.loc 1 42 9 is_stmt 1
 274              	.LBB11:
 275 0160 630A9704 		beq	a4,s1,.L27
 276              	.LBB12:
  43:src/SleepingThreadsList.cpp ****             if(slice >= tail->slice){
  44:src/SleepingThreadsList.cpp ****                 Node* novi = (Node*) __mem_alloc(sizeof(Node));
  45:src/SleepingThreadsList.cpp ****                 novi->thread = thread;
  46:src/SleepingThreadsList.cpp ****                 novi->next = nullptr;
  47:src/SleepingThreadsList.cpp ****                 novi->slice = slice - tail->slice;
  48:src/SleepingThreadsList.cpp ****                 tail->next = novi;
  49:src/SleepingThreadsList.cpp ****                 tail = novi;
  50:src/SleepingThreadsList.cpp ****             }
  51:src/SleepingThreadsList.cpp ****             else {
  52:src/SleepingThreadsList.cpp ****                 Node* novi = (Node*) __mem_alloc(sizeof(Node));
  53:src/SleepingThreadsList.cpp ****                 novi->thread = thread;
  54:src/SleepingThreadsList.cpp ****                 novi->next = tail;
  55:src/SleepingThreadsList.cpp ****                 novi->slice= slice;
  56:src/SleepingThreadsList.cpp ****                 if(prev != nullptr){
  57:src/SleepingThreadsList.cpp ****                     prev->next = novi;
  58:src/SleepingThreadsList.cpp ****                 } else {
  59:src/SleepingThreadsList.cpp ****                     head = novi;
  60:src/SleepingThreadsList.cpp ****                 }
  61:src/SleepingThreadsList.cpp ****                 tail->slice -= slice;
  62:src/SleepingThreadsList.cpp ****             }
  63:src/SleepingThreadsList.cpp ****         }
  64:src/SleepingThreadsList.cpp ****         else {
  65:src/SleepingThreadsList.cpp ****             Node* novi = (Node*) __mem_alloc(sizeof(Node));
 277              		.loc 1 65 13
 278              		.loc 1 65 45 is_stmt 0
 279 0164 13058001 		li	a0,24
 280              	.LVL22:
 281 0168 97000000 		call	__mem_alloc@plt
 281      E7800000 
 282              	.LVL23:
  66:src/SleepingThreadsList.cpp ****             novi->thread = thread;
 283              		.loc 1 66 13 is_stmt 1
 284              		.loc 1 66 26 is_stmt 0
 285 0170 23305501 		sd	s5,0(a0)
  67:src/SleepingThreadsList.cpp ****             novi->next  = temp;
 286              		.loc 1 67 13 is_stmt 1
 287              		.loc 1 67 25 is_stmt 0
 288 0174 23389500 		sd	s1,16(a0)
  68:src/SleepingThreadsList.cpp ****             novi->slice = slice;
 289              		.loc 1 68 13 is_stmt 1
 290              		.loc 1 68 25 is_stmt 0
 291 0178 23342501 		sd	s2,8(a0)
  69:src/SleepingThreadsList.cpp ****             if(prev) {
 292              		.loc 1 69 13 is_stmt 1
 293 017c 638A090A 		beqz	s3,.L22
  70:src/SleepingThreadsList.cpp ****                 prev->next = novi;
 294              		.loc 1 70 17
 295              		.loc 1 70 28 is_stmt 0
 296 0180 23B8A900 		sd	a0,16(s3)
GAS LISTING /tmp/ccwaWI4b.s 			page 9


 297              	.L23:
  71:src/SleepingThreadsList.cpp ****             } else {
  72:src/SleepingThreadsList.cpp ****                 head = novi;
  73:src/SleepingThreadsList.cpp ****             }
  74:src/SleepingThreadsList.cpp ****             temp->slice -= slice;
 298              		.loc 1 74 13 is_stmt 1
 299              		.loc 1 74 25 is_stmt 0
 300 0184 83B78400 		ld	a5,8(s1)
 301 0188 33892741 		sub	s2,a5,s2
 302              	.LVL24:
 303 018c 23B42401 		sd	s2,8(s1)
 304              	.LVL25:
 305              	.L14:
 306              	.LBE12:
 307              	.LBE11:
 308              	.LBE18:
 309              	.LBE9:
  75:src/SleepingThreadsList.cpp ****         }
  76:src/SleepingThreadsList.cpp ****     }
  77:src/SleepingThreadsList.cpp **** }...
 310              		.loc 1 77 1
 311 0190 83308103 		ld	ra,56(sp)
 312              		.cfi_remember_state
 313              		.cfi_restore 1
 314 0194 03340103 		ld	s0,48(sp)
 315              		.cfi_restore 8
 316              		.cfi_def_cfa 2, 64
 317 0198 83348102 		ld	s1,40(sp)
 318              		.cfi_restore 9
 319 019c 03390102 		ld	s2,32(sp)
 320              		.cfi_restore 18
 321 01a0 83398101 		ld	s3,24(sp)
 322              		.cfi_restore 19
 323 01a4 033A0101 		ld	s4,16(sp)
 324              		.cfi_restore 20
 325              	.LVL26:
 326 01a8 833A8100 		ld	s5,8(sp)
 327              		.cfi_restore 21
 328              	.LVL27:
 329 01ac 13010104 		addi	sp,sp,64
 330              		.cfi_def_cfa_offset 0
 331 01b0 67800000 		jr	ra
 332              	.LVL28:
 333              	.L27:
 334              		.cfi_restore_state
  43:src/SleepingThreadsList.cpp ****             if(slice >= tail->slice){
 335              		.loc 1 43 13 is_stmt 1
 336              	.LBB20:
 337              	.LBB19:
 338              	.LBB17:
 339              	.LBB13:
  43:src/SleepingThreadsList.cpp ****             if(slice >= tail->slice){
 340              		.loc 1 43 31 is_stmt 0
 341 01b4 83378700 		ld	a5,8(a4)
  43:src/SleepingThreadsList.cpp ****             if(slice >= tail->slice){
 342              		.loc 1 43 13
 343 01b8 636CF902 		bgtu	a5,s2,.L19
GAS LISTING /tmp/ccwaWI4b.s 			page 10


 344              	.LBB14:
  44:src/SleepingThreadsList.cpp ****                 Node* novi = (Node*) __mem_alloc(sizeof(Node));
 345              		.loc 1 44 17 is_stmt 1
  44:src/SleepingThreadsList.cpp ****                 Node* novi = (Node*) __mem_alloc(sizeof(Node));
 346              		.loc 1 44 49 is_stmt 0
 347 01bc 13058001 		li	a0,24
 348              	.LVL29:
 349 01c0 97000000 		call	__mem_alloc@plt
 349      E7800000 
 350              	.LVL30:
  45:src/SleepingThreadsList.cpp ****                 novi->thread = thread;
 351              		.loc 1 45 17 is_stmt 1
  45:src/SleepingThreadsList.cpp ****                 novi->thread = thread;
 352              		.loc 1 45 30 is_stmt 0
 353 01c8 23305501 		sd	s5,0(a0)
  46:src/SleepingThreadsList.cpp ****                 novi->next = nullptr;
 354              		.loc 1 46 17 is_stmt 1
  46:src/SleepingThreadsList.cpp ****                 novi->next = nullptr;
 355              		.loc 1 46 28 is_stmt 0
 356 01cc 23380500 		sd	zero,16(a0)
  47:src/SleepingThreadsList.cpp ****                 novi->slice = slice - tail->slice;
 357              		.loc 1 47 17 is_stmt 1
  47:src/SleepingThreadsList.cpp ****                 novi->slice = slice - tail->slice;
 358              		.loc 1 47 39 is_stmt 0
 359 01d0 83378A00 		ld	a5,8(s4)
  47:src/SleepingThreadsList.cpp ****                 novi->slice = slice - tail->slice;
 360              		.loc 1 47 45
 361 01d4 83B78700 		ld	a5,8(a5)
  47:src/SleepingThreadsList.cpp ****                 novi->slice = slice - tail->slice;
 362              		.loc 1 47 37
 363 01d8 3309F940 		sub	s2,s2,a5
 364              	.LVL31:
  47:src/SleepingThreadsList.cpp ****                 novi->slice = slice - tail->slice;
 365              		.loc 1 47 29
 366 01dc 23342501 		sd	s2,8(a0)
  48:src/SleepingThreadsList.cpp ****                 tail->next = novi;
 367              		.loc 1 48 17 is_stmt 1
 368 01e0 83378A00 		ld	a5,8(s4)
  48:src/SleepingThreadsList.cpp ****                 tail->next = novi;
 369              		.loc 1 48 28 is_stmt 0
 370 01e4 23B8A700 		sd	a0,16(a5)
  49:src/SleepingThreadsList.cpp ****                 tail = novi;
 371              		.loc 1 49 17 is_stmt 1
  49:src/SleepingThreadsList.cpp ****                 tail = novi;
 372              		.loc 1 49 22 is_stmt 0
 373 01e8 2334AA00 		sd	a0,8(s4)
 374              	.LBE14:
 375 01ec 6FF05FFA 		j	.L14
 376              	.LVL32:
 377              	.L19:
 378              	.LBB15:
  52:src/SleepingThreadsList.cpp ****                 Node* novi = (Node*) __mem_alloc(sizeof(Node));
 379              		.loc 1 52 17 is_stmt 1
  52:src/SleepingThreadsList.cpp ****                 Node* novi = (Node*) __mem_alloc(sizeof(Node));
 380              		.loc 1 52 49 is_stmt 0
 381 01f0 13058001 		li	a0,24
 382              	.LVL33:
GAS LISTING /tmp/ccwaWI4b.s 			page 11


 383 01f4 97000000 		call	__mem_alloc@plt
 383      E7800000 
 384              	.LVL34:
  53:src/SleepingThreadsList.cpp ****                 novi->thread = thread;
 385              		.loc 1 53 17 is_stmt 1
  53:src/SleepingThreadsList.cpp ****                 novi->thread = thread;
 386              		.loc 1 53 30 is_stmt 0
 387 01fc 23305501 		sd	s5,0(a0)
  54:src/SleepingThreadsList.cpp ****                 novi->next = tail;
 388              		.loc 1 54 17 is_stmt 1
  54:src/SleepingThreadsList.cpp ****                 novi->next = tail;
 389              		.loc 1 54 30 is_stmt 0
 390 0200 83378A00 		ld	a5,8(s4)
  54:src/SleepingThreadsList.cpp ****                 novi->next = tail;
 391              		.loc 1 54 28
 392 0204 2338F500 		sd	a5,16(a0)
  55:src/SleepingThreadsList.cpp ****                 novi->slice= slice;
 393              		.loc 1 55 17 is_stmt 1
  55:src/SleepingThreadsList.cpp ****                 novi->slice= slice;
 394              		.loc 1 55 28 is_stmt 0
 395 0208 23342501 		sd	s2,8(a0)
  56:src/SleepingThreadsList.cpp ****                 if(prev != nullptr){
 396              		.loc 1 56 17 is_stmt 1
 397 020c 638E0900 		beqz	s3,.L20
  57:src/SleepingThreadsList.cpp ****                     prev->next = novi;
 398              		.loc 1 57 21
  57:src/SleepingThreadsList.cpp ****                     prev->next = novi;
 399              		.loc 1 57 32 is_stmt 0
 400 0210 23B8A900 		sd	a0,16(s3)
 401              	.L21:
  61:src/SleepingThreadsList.cpp ****                 tail->slice -= slice;
 402              		.loc 1 61 17 is_stmt 1
 403 0214 03378A00 		ld	a4,8(s4)
  61:src/SleepingThreadsList.cpp ****                 tail->slice -= slice;
 404              		.loc 1 61 29 is_stmt 0
 405 0218 83378700 		ld	a5,8(a4)
 406 021c 33892741 		sub	s2,a5,s2
 407              	.LVL35:
 408 0220 23342701 		sd	s2,8(a4)
 409 0224 6FF0DFF6 		j	.L14
 410              	.LVL36:
 411              	.L20:
  59:src/SleepingThreadsList.cpp ****                     head = novi;
 412              		.loc 1 59 21 is_stmt 1
  59:src/SleepingThreadsList.cpp ****                     head = novi;
 413              		.loc 1 59 26 is_stmt 0
 414 0228 2330AA00 		sd	a0,0(s4)
 415 022c 6FF09FFE 		j	.L21
 416              	.LVL37:
 417              	.L22:
 418              	.LBE15:
 419              	.LBE13:
 420              	.LBB16:
  72:src/SleepingThreadsList.cpp ****                 head = novi;
 421              		.loc 1 72 17 is_stmt 1
  72:src/SleepingThreadsList.cpp ****                 head = novi;
 422              		.loc 1 72 22 is_stmt 0
GAS LISTING /tmp/ccwaWI4b.s 			page 12


 423 0230 2330AA00 		sd	a0,0(s4)
 424 0234 6FF01FF5 		j	.L23
 425              	.LBE16:
 426              	.LBE17:
 427              	.LBE19:
 428              	.LBE20:
 429              		.cfi_endproc
 430              	.LFE41:
 432              	.Letext0:
 433              		.file 3 "src/../h/../h/scheduler.hpp"
 434              		.file 4 "src/../h/../h/../lib/hw.h"
 435              		.file 5 "src/../h/../h/../h/../h/syscall_c.h"
 436              		.file 6 "src/../h/SleepingThreadsList.hpp"
 437              		.file 7 "src/../h/../h/../h/../lib/mem.h"
GAS LISTING /tmp/ccwaWI4b.s 			page 13


DEFINED SYMBOLS
                            *ABS*:0000000000000000 SleepingThreadsList.cpp
     /tmp/ccwaWI4b.s:9      .text:0000000000000000 _ZN19SleepingThreadsList14dec_time_firstEv
     /tmp/ccwaWI4b.s:13     .text:0000000000000000 .L0 
     /tmp/ccwaWI4b.s:15     .text:0000000000000000 .L0 
     /tmp/ccwaWI4b.s:16     .text:0000000000000004 .L0 
     /tmp/ccwaWI4b.s:18     .text:0000000000000008 .L0 
     /tmp/ccwaWI4b.s:20     .text:000000000000000c .L0 
     /tmp/ccwaWI4b.s:22     .text:000000000000000c .L0 
     /tmp/ccwaWI4b.s:23     .text:000000000000000c .L0 
     /tmp/ccwaWI4b.s:25     .text:0000000000000010 .L0 
     /tmp/ccwaWI4b.s:27     .text:0000000000000014 .L0 
     /tmp/ccwaWI4b.s:28     .text:0000000000000014 .L0 
     /tmp/ccwaWI4b.s:33     .text:0000000000000020 .L0 
     /tmp/ccwaWI4b.s:34     .text:0000000000000024 .L0 
     /tmp/ccwaWI4b.s:35     .text:0000000000000024 .L0 
     /tmp/ccwaWI4b.s:37     .text:0000000000000028 .L0 
     /tmp/ccwaWI4b.s:39     .text:000000000000002c .L0 
     /tmp/ccwaWI4b.s:45     .text:000000000000002c _ZN19SleepingThreadsList15peek_time_firstEv
     /tmp/ccwaWI4b.s:48     .text:000000000000002c .L0 
     /tmp/ccwaWI4b.s:50     .text:000000000000002c .L0 
     /tmp/ccwaWI4b.s:51     .text:0000000000000030 .L0 
     /tmp/ccwaWI4b.s:53     .text:0000000000000034 .L0 
     /tmp/ccwaWI4b.s:55     .text:0000000000000038 .L0 
     /tmp/ccwaWI4b.s:57     .text:0000000000000038 .L0 
     /tmp/ccwaWI4b.s:58     .text:0000000000000038 .L0 
     /tmp/ccwaWI4b.s:60     .text:000000000000003c .L0 
     /tmp/ccwaWI4b.s:62     .text:0000000000000040 .L0 
     /tmp/ccwaWI4b.s:63     .text:0000000000000040 .L0 
     /tmp/ccwaWI4b.s:67     .text:0000000000000044 .L0 
     /tmp/ccwaWI4b.s:68     .text:0000000000000048 .L0 
     /tmp/ccwaWI4b.s:69     .text:0000000000000048 .L0 
     /tmp/ccwaWI4b.s:70     .text:0000000000000048 .L0 
     /tmp/ccwaWI4b.s:72     .text:000000000000004c .L0 
     /tmp/ccwaWI4b.s:76     .text:0000000000000050 .L0 
     /tmp/ccwaWI4b.s:78     .text:0000000000000050 .L0 
     /tmp/ccwaWI4b.s:81     .text:0000000000000058 .L0 
     /tmp/ccwaWI4b.s:87     .text:0000000000000058 _ZN19SleepingThreadsList15remove_finishedEv
     /tmp/ccwaWI4b.s:90     .text:0000000000000058 .L0 
     /tmp/ccwaWI4b.s:92     .text:0000000000000058 .L0 
     /tmp/ccwaWI4b.s:93     .text:000000000000005c .L0 
     /tmp/ccwaWI4b.s:98     .text:000000000000006c .L0 
     /tmp/ccwaWI4b.s:99     .text:000000000000006c .L0 
     /tmp/ccwaWI4b.s:100    .text:000000000000006c .L0 
     /tmp/ccwaWI4b.s:101    .text:000000000000006c .L0 
     /tmp/ccwaWI4b.s:103    .text:0000000000000070 .L0 
     /tmp/ccwaWI4b.s:110    .text:0000000000000078 .L0 
     /tmp/ccwaWI4b.s:111    .text:0000000000000078 .L0 
     /tmp/ccwaWI4b.s:114    .text:000000000000007c .L0 
     /tmp/ccwaWI4b.s:115    .text:000000000000007c .L0 
     /tmp/ccwaWI4b.s:121    .text:0000000000000080 .L0 
     /tmp/ccwaWI4b.s:122    .text:0000000000000080 .L0 
     /tmp/ccwaWI4b.s:127    .text:0000000000000084 .L0 
     /tmp/ccwaWI4b.s:128    .text:0000000000000084 .L0 
     /tmp/ccwaWI4b.s:132    .text:0000000000000090 .L0 
     /tmp/ccwaWI4b.s:133    .text:0000000000000090 .L0 
     /tmp/ccwaWI4b.s:139    .text:000000000000009c .L0 
GAS LISTING /tmp/ccwaWI4b.s 			page 14


     /tmp/ccwaWI4b.s:140    .text:000000000000009c .L0 
     /tmp/ccwaWI4b.s:141    .text:000000000000009c .L0 
     /tmp/ccwaWI4b.s:143    .text:00000000000000a0 .L0 
     /tmp/ccwaWI4b.s:145    .text:00000000000000a4 .L0 
     /tmp/ccwaWI4b.s:147    .text:00000000000000a8 .L0 
     /tmp/ccwaWI4b.s:151    .text:00000000000000ac .L0 
     /tmp/ccwaWI4b.s:152    .text:00000000000000ac .L0 
     /tmp/ccwaWI4b.s:153    .text:00000000000000ac .L0 
     /tmp/ccwaWI4b.s:155    .text:00000000000000b0 .L0 
     /tmp/ccwaWI4b.s:157    .text:00000000000000b4 .L0 
     /tmp/ccwaWI4b.s:163    .text:00000000000000bc .L0 
     /tmp/ccwaWI4b.s:164    .text:00000000000000c0 .L0 
     /tmp/ccwaWI4b.s:166    .text:00000000000000c4 .L0 
     /tmp/ccwaWI4b.s:167    .text:00000000000000c4 .L0 
     /tmp/ccwaWI4b.s:169    .text:00000000000000c8 .L0 
     /tmp/ccwaWI4b.s:171    .text:00000000000000cc .L0 
     /tmp/ccwaWI4b.s:174    .text:00000000000000d0 .L0 
     /tmp/ccwaWI4b.s:176    .text:00000000000000d4 .L0 
     /tmp/ccwaWI4b.s:182    .text:00000000000000d4 _ZN19SleepingThreadsList3putEP3TCBm
     /tmp/ccwaWI4b.s:185    .text:00000000000000d4 .L0 
     /tmp/ccwaWI4b.s:187    .text:00000000000000d4 .L0 
     /tmp/ccwaWI4b.s:188    .text:00000000000000d8 .L0 
     /tmp/ccwaWI4b.s:196    .text:00000000000000f4 .L0 
     /tmp/ccwaWI4b.s:197    .text:00000000000000f4 .L0 
     /tmp/ccwaWI4b.s:198    .text:00000000000000f4 .L0 
     /tmp/ccwaWI4b.s:199    .text:00000000000000f4 .L0 
     /tmp/ccwaWI4b.s:200    .text:00000000000000f4 .L0 
     /tmp/ccwaWI4b.s:201    .text:00000000000000f4 .L0 
     /tmp/ccwaWI4b.s:202    .text:00000000000000f4 .L0 
     /tmp/ccwaWI4b.s:204    .text:00000000000000f8 .L0 
     /tmp/ccwaWI4b.s:210    .text:0000000000000104 .L0 
     /tmp/ccwaWI4b.s:211    .text:0000000000000104 .L0 
     /tmp/ccwaWI4b.s:213    .text:0000000000000108 .L0 
     /tmp/ccwaWI4b.s:216    .text:000000000000010c .L0 
     /tmp/ccwaWI4b.s:220    .text:0000000000000110 .L0 
     /tmp/ccwaWI4b.s:221    .text:0000000000000110 .L0 
     /tmp/ccwaWI4b.s:222    .text:0000000000000110 .L0 
     /tmp/ccwaWI4b.s:224    .text:0000000000000114 .L0 
     /tmp/ccwaWI4b.s:226    .text:0000000000000118 .L0 
     /tmp/ccwaWI4b.s:228    .text:000000000000011c .L0 
     /tmp/ccwaWI4b.s:230    .text:0000000000000120 .L0 
     /tmp/ccwaWI4b.s:231    .text:0000000000000120 .L0 
     /tmp/ccwaWI4b.s:234    .text:0000000000000124 .L0 
     /tmp/ccwaWI4b.s:235    .text:0000000000000124 .L0 
     /tmp/ccwaWI4b.s:236    .text:0000000000000124 .L0 
     /tmp/ccwaWI4b.s:238    .text:0000000000000128 .L0 
     /tmp/ccwaWI4b.s:241    .text:000000000000012c .L0 
     /tmp/ccwaWI4b.s:246    .text:0000000000000130 .L0 
     /tmp/ccwaWI4b.s:247    .text:0000000000000130 .L0 
     /tmp/ccwaWI4b.s:252    .text:000000000000013c .L0 
     /tmp/ccwaWI4b.s:254    .text:0000000000000140 .L0 
     /tmp/ccwaWI4b.s:255    .text:0000000000000140 .L0 
     /tmp/ccwaWI4b.s:257    .text:0000000000000144 .L0 
     /tmp/ccwaWI4b.s:259    .text:0000000000000148 .L0 
     /tmp/ccwaWI4b.s:261    .text:000000000000014c .L0 
     /tmp/ccwaWI4b.s:263    .text:0000000000000150 .L0 
     /tmp/ccwaWI4b.s:265    .text:0000000000000154 .L0 
GAS LISTING /tmp/ccwaWI4b.s 			page 15


     /tmp/ccwaWI4b.s:266    .text:0000000000000154 .L0 
     /tmp/ccwaWI4b.s:268    .text:0000000000000158 .L0 
     /tmp/ccwaWI4b.s:275    .text:0000000000000160 .L0 
     /tmp/ccwaWI4b.s:278    .text:0000000000000164 .L0 
     /tmp/ccwaWI4b.s:279    .text:0000000000000164 .L0 
     /tmp/ccwaWI4b.s:284    .text:0000000000000170 .L0 
     /tmp/ccwaWI4b.s:285    .text:0000000000000170 .L0 
     /tmp/ccwaWI4b.s:287    .text:0000000000000174 .L0 
     /tmp/ccwaWI4b.s:288    .text:0000000000000174 .L0 
     /tmp/ccwaWI4b.s:290    .text:0000000000000178 .L0 
     /tmp/ccwaWI4b.s:291    .text:0000000000000178 .L0 
     /tmp/ccwaWI4b.s:293    .text:000000000000017c .L0 
     /tmp/ccwaWI4b.s:295    .text:0000000000000180 .L0 
     /tmp/ccwaWI4b.s:296    .text:0000000000000180 .L0 
     /tmp/ccwaWI4b.s:299    .text:0000000000000184 .L0 
     /tmp/ccwaWI4b.s:300    .text:0000000000000184 .L0 
     /tmp/ccwaWI4b.s:311    .text:0000000000000190 .L0 
     /tmp/ccwaWI4b.s:312    .text:0000000000000194 .L0 
     /tmp/ccwaWI4b.s:313    .text:0000000000000194 .L0 
     /tmp/ccwaWI4b.s:315    .text:0000000000000198 .L0 
     /tmp/ccwaWI4b.s:316    .text:0000000000000198 .L0 
     /tmp/ccwaWI4b.s:318    .text:000000000000019c .L0 
     /tmp/ccwaWI4b.s:320    .text:00000000000001a0 .L0 
     /tmp/ccwaWI4b.s:322    .text:00000000000001a4 .L0 
     /tmp/ccwaWI4b.s:324    .text:00000000000001a8 .L0 
     /tmp/ccwaWI4b.s:327    .text:00000000000001ac .L0 
     /tmp/ccwaWI4b.s:330    .text:00000000000001b0 .L0 
     /tmp/ccwaWI4b.s:334    .text:00000000000001b4 .L0 
     /tmp/ccwaWI4b.s:340    .text:00000000000001b4 .L0 
     /tmp/ccwaWI4b.s:341    .text:00000000000001b4 .L0 
     /tmp/ccwaWI4b.s:343    .text:00000000000001b8 .L0 
     /tmp/ccwaWI4b.s:346    .text:00000000000001bc .L0 
     /tmp/ccwaWI4b.s:347    .text:00000000000001bc .L0 
     /tmp/ccwaWI4b.s:352    .text:00000000000001c8 .L0 
     /tmp/ccwaWI4b.s:353    .text:00000000000001c8 .L0 
     /tmp/ccwaWI4b.s:355    .text:00000000000001cc .L0 
     /tmp/ccwaWI4b.s:356    .text:00000000000001cc .L0 
     /tmp/ccwaWI4b.s:358    .text:00000000000001d0 .L0 
     /tmp/ccwaWI4b.s:359    .text:00000000000001d0 .L0 
     /tmp/ccwaWI4b.s:361    .text:00000000000001d4 .L0 
     /tmp/ccwaWI4b.s:363    .text:00000000000001d8 .L0 
     /tmp/ccwaWI4b.s:366    .text:00000000000001dc .L0 
     /tmp/ccwaWI4b.s:368    .text:00000000000001e0 .L0 
     /tmp/ccwaWI4b.s:370    .text:00000000000001e4 .L0 
     /tmp/ccwaWI4b.s:372    .text:00000000000001e8 .L0 
     /tmp/ccwaWI4b.s:373    .text:00000000000001e8 .L0 
     /tmp/ccwaWI4b.s:380    .text:00000000000001f0 .L0 
     /tmp/ccwaWI4b.s:381    .text:00000000000001f0 .L0 
     /tmp/ccwaWI4b.s:386    .text:00000000000001fc .L0 
     /tmp/ccwaWI4b.s:387    .text:00000000000001fc .L0 
     /tmp/ccwaWI4b.s:389    .text:0000000000000200 .L0 
     /tmp/ccwaWI4b.s:390    .text:0000000000000200 .L0 
     /tmp/ccwaWI4b.s:392    .text:0000000000000204 .L0 
     /tmp/ccwaWI4b.s:394    .text:0000000000000208 .L0 
     /tmp/ccwaWI4b.s:395    .text:0000000000000208 .L0 
     /tmp/ccwaWI4b.s:397    .text:000000000000020c .L0 
     /tmp/ccwaWI4b.s:399    .text:0000000000000210 .L0 
GAS LISTING /tmp/ccwaWI4b.s 			page 16


     /tmp/ccwaWI4b.s:400    .text:0000000000000210 .L0 
     /tmp/ccwaWI4b.s:403    .text:0000000000000214 .L0 
     /tmp/ccwaWI4b.s:405    .text:0000000000000218 .L0 
     /tmp/ccwaWI4b.s:413    .text:0000000000000228 .L0 
     /tmp/ccwaWI4b.s:414    .text:0000000000000228 .L0 
     /tmp/ccwaWI4b.s:422    .text:0000000000000230 .L0 
     /tmp/ccwaWI4b.s:423    .text:0000000000000230 .L0 
     /tmp/ccwaWI4b.s:429    .text:0000000000000238 .L0 
     /tmp/ccwaWI4b.s:438    .text:0000000000000238 .L0 
     /tmp/ccwaWI4b.s:31     .text:0000000000000020 .L1
     /tmp/ccwaWI4b.s:75     .text:0000000000000050 .L6
     /tmp/ccwaWI4b.s:65     .text:0000000000000044 .L4
     /tmp/ccwaWI4b.s:136    .text:000000000000009c .L11
     /tmp/ccwaWI4b.s:160    .text:00000000000000bc .L8
     /tmp/ccwaWI4b.s:112    .text:000000000000007c .L10
     /tmp/ccwaWI4b.s:107    .text:0000000000000078 .L13
     /tmp/ccwaWI4b.s:243    .text:0000000000000130 .L26
     /tmp/ccwaWI4b.s:271    .text:0000000000000160 .L17
     /tmp/ccwaWI4b.s:218    .text:0000000000000110 .L15
     /tmp/ccwaWI4b.s:305    .text:0000000000000190 .L14
     /tmp/ccwaWI4b.s:333    .text:00000000000001b4 .L27
     /tmp/ccwaWI4b.s:417    .text:0000000000000230 .L22
     /tmp/ccwaWI4b.s:377    .text:00000000000001f0 .L19
     /tmp/ccwaWI4b.s:411    .text:0000000000000228 .L20
     /tmp/ccwaWI4b.s:401    .text:0000000000000214 .L21
     /tmp/ccwaWI4b.s:297    .text:0000000000000184 .L23
     /tmp/ccwaWI4b.s:1607   .debug_abbrev:0000000000000000 .Ldebug_abbrev0
     /tmp/ccwaWI4b.s:3033   .debug_str:00000000000005ed .LASF113
     /tmp/ccwaWI4b.s:2927   .debug_str:00000000000002ce .LASF114
     /tmp/ccwaWI4b.s:3039   .debug_str:00000000000006d0 .LASF115
     /tmp/ccwaWI4b.s:5      .text:0000000000000000 .Ltext0
     /tmp/ccwaWI4b.s:432    .text:0000000000000238 .Letext0
     /tmp/ccwaWI4b.s:2833   .debug_line:0000000000000000 .Ldebug_line0
     /tmp/ccwaWI4b.s:2901   .debug_str:00000000000001df .LASF1
     /tmp/ccwaWI4b.s:2881   .debug_str:0000000000000159 .LASF7
     /tmp/ccwaWI4b.s:2861   .debug_str:00000000000000b8 .LASF0
     /tmp/ccwaWI4b.s:3063   .debug_str:0000000000000791 .LASF3
     /tmp/ccwaWI4b.s:2835   .debug_str:0000000000000000 .LASF2
     /tmp/ccwaWI4b.s:3045   .debug_str:0000000000000707 .LASF4
     /tmp/ccwaWI4b.s:3013   .debug_str:000000000000055f .LASF5
     /tmp/ccwaWI4b.s:2965   .debug_str:0000000000000424 .LASF6
     /tmp/ccwaWI4b.s:2855   .debug_str:0000000000000084 .LASF33
     /tmp/ccwaWI4b.s:2995   .debug_str:00000000000004e3 .LASF95
     /tmp/ccwaWI4b.s:2999   .debug_str:00000000000004f9 .LASF96
     /tmp/ccwaWI4b.s:3065   .debug_str:00000000000007a3 .LASF116
     /tmp/ccwaWI4b.s:2917   .debug_str:0000000000000286 .LASF117
     /tmp/ccwaWI4b.s:3023   .debug_str:00000000000005a1 .LASF8
     /tmp/ccwaWI4b.s:2969   .debug_str:0000000000000431 .LASF60
     /tmp/ccwaWI4b.s:2837   .debug_str:000000000000000b .LASF9
     /tmp/ccwaWI4b.s:3067   .debug_str:00000000000007b7 .LASF10
     /tmp/ccwaWI4b.s:3007   .debug_str:000000000000053f .LASF11
     /tmp/ccwaWI4b.s:3041   .debug_str:00000000000006f3 .LASF12
     /tmp/ccwaWI4b.s:2989   .debug_str:00000000000004c3 .LASF13
     /tmp/ccwaWI4b.s:3009   .debug_str:0000000000000545 .LASF14
     /tmp/ccwaWI4b.s:2967   .debug_str:0000000000000429 .LASF15
     /tmp/ccwaWI4b.s:3021   .debug_str:0000000000000598 .LASF16
     /tmp/ccwaWI4b.s:3069   .debug_str:00000000000007bc .LASF17
GAS LISTING /tmp/ccwaWI4b.s 			page 17


     /tmp/ccwaWI4b.s:2933   .debug_str:0000000000000302 .LASF18
     /tmp/ccwaWI4b.s:3003   .debug_str:0000000000000515 .LASF104
     /tmp/ccwaWI4b.s:3071   .debug_str:00000000000007c1 .LASF19
     /tmp/ccwaWI4b.s:2875   .debug_str:0000000000000123 .LASF20
     /tmp/ccwaWI4b.s:2839   .debug_str:0000000000000010 .LASF118
     /tmp/ccwaWI4b.s:2885   .debug_str:0000000000000167 .LASF21
     /tmp/ccwaWI4b.s:2959   .debug_str:00000000000003e9 .LASF23
     /tmp/ccwaWI4b.s:2883   .debug_str:000000000000015e .LASF22
     /tmp/ccwaWI4b.s:2865   .debug_str:00000000000000c6 .LASF24
     /tmp/ccwaWI4b.s:3031   .debug_str:00000000000005e5 .LASF25
     /tmp/ccwaWI4b.s:3051   .debug_str:000000000000072d .LASF26
     /tmp/ccwaWI4b.s:2911   .debug_str:000000000000022f .LASF27
     /tmp/ccwaWI4b.s:2941   .debug_str:0000000000000342 .LASF119
     /tmp/ccwaWI4b.s:3035   .debug_str:00000000000006b1 .LASF120
     /tmp/ccwaWI4b.s:3029   .debug_str:00000000000005e0 .LASF28
     /tmp/ccwaWI4b.s:2893   .debug_str:00000000000001a0 .LASF30
     /tmp/ccwaWI4b.s:3011   .debug_str:000000000000054e .LASF29
     /tmp/ccwaWI4b.s:2905   .debug_str:00000000000001f9 .LASF31
     /tmp/ccwaWI4b.s:2971   .debug_str:0000000000000436 .LASF32
     /tmp/ccwaWI4b.s:2961   .debug_str:0000000000000403 .LASF34
     /tmp/ccwaWI4b.s:3049   .debug_str:0000000000000720 .LASF35
     /tmp/ccwaWI4b.s:2873   .debug_str:000000000000010b .LASF36
     /tmp/ccwaWI4b.s:2975   .debug_str:0000000000000455 .LASF37
     /tmp/ccwaWI4b.s:2877   .debug_str:0000000000000131 .LASF38
     /tmp/ccwaWI4b.s:3053   .debug_str:000000000000073b .LASF39
     /tmp/ccwaWI4b.s:2869   .debug_str:00000000000000e3 .LASF40
     /tmp/ccwaWI4b.s:3057   .debug_str:0000000000000757 .LASF41
     /tmp/ccwaWI4b.s:2851   .debug_str:0000000000000065 .LASF42
     /tmp/ccwaWI4b.s:2921   .debug_str:00000000000002ab .LASF43
     /tmp/ccwaWI4b.s:2943   .debug_str:0000000000000348 .LASF44
     /tmp/ccwaWI4b.s:2853   .debug_str:000000000000007c .LASF45
     /tmp/ccwaWI4b.s:3005   .debug_str:000000000000052c .LASF46
     /tmp/ccwaWI4b.s:3047   .debug_str:0000000000000719 .LASF47
     /tmp/ccwaWI4b.s:2949   .debug_str:000000000000038d .LASF48
     /tmp/ccwaWI4b.s:3037   .debug_str:00000000000006c1 .LASF49
     /tmp/ccwaWI4b.s:2951   .debug_str:000000000000039f .LASF50
     /tmp/ccwaWI4b.s:2945   .debug_str:000000000000035f .LASF51
     /tmp/ccwaWI4b.s:3015   .debug_str:0000000000000564 .LASF52
     /tmp/ccwaWI4b.s:2981   .debug_str:0000000000000494 .LASF53
     /tmp/ccwaWI4b.s:3073   .debug_str:00000000000007d4 .LASF54
     /tmp/ccwaWI4b.s:2987   .debug_str:00000000000004be .LASF55
     /tmp/ccwaWI4b.s:2841   .debug_str:0000000000000038 .LASF56
     /tmp/ccwaWI4b.s:2919   .debug_str:000000000000029e .LASF57
     /tmp/ccwaWI4b.s:2937   .debug_str:0000000000000312 .LASF58
     /tmp/ccwaWI4b.s:2993   .debug_str:00000000000004d5 .LASF59
     /tmp/ccwaWI4b.s:3001   .debug_str:000000000000050e .LASF61
     /tmp/ccwaWI4b.s:2925   .debug_str:00000000000002bc .LASF62
     /tmp/ccwaWI4b.s:2843   .debug_str:0000000000000044 .LASF63
     /tmp/ccwaWI4b.s:2979   .debug_str:000000000000048d .LASF64
     /tmp/ccwaWI4b.s:2973   .debug_str:0000000000000442 .LASF65
     /tmp/ccwaWI4b.s:2931   .debug_str:00000000000002ef .LASF66
     /tmp/ccwaWI4b.s:2903   .debug_str:00000000000001e9 .LASF67
     /tmp/ccwaWI4b.s:2907   .debug_str:0000000000000216 .LASF68
     /tmp/ccwaWI4b.s:2859   .debug_str:00000000000000a9 .LASF69
     /tmp/ccwaWI4b.s:2889   .debug_str:000000000000018c .LASF70
     /tmp/ccwaWI4b.s:2871   .debug_str:00000000000000fb .LASF71
     /tmp/ccwaWI4b.s:2857   .debug_str:0000000000000099 .LASF72
GAS LISTING /tmp/ccwaWI4b.s 			page 18


     /tmp/ccwaWI4b.s:3017   .debug_str:000000000000057e .LASF73
     /tmp/ccwaWI4b.s:2887   .debug_str:0000000000000176 .LASF74
     /tmp/ccwaWI4b.s:2957   .debug_str:00000000000003d3 .LASF75
     /tmp/ccwaWI4b.s:3075   .debug_str:00000000000007ed .LASF76
     /tmp/ccwaWI4b.s:2897   .debug_str:00000000000001b6 .LASF77
     /tmp/ccwaWI4b.s:3019   .debug_str:000000000000058a .LASF78
     /tmp/ccwaWI4b.s:2985   .debug_str:00000000000004b2 .LASF79
     /tmp/ccwaWI4b.s:2879   .debug_str:0000000000000149 .LASF80
     /tmp/ccwaWI4b.s:2997   .debug_str:00000000000004ed .LASF81
     /tmp/ccwaWI4b.s:2863   .debug_str:00000000000000bd .LASF82
     /tmp/ccwaWI4b.s:2867   .debug_str:00000000000000d9 .LASF83
     /tmp/ccwaWI4b.s:2963   .debug_str:000000000000041b .LASF84
     /tmp/ccwaWI4b.s:3025   .debug_str:00000000000005a9 .LASF85
     /tmp/ccwaWI4b.s:3061   .debug_str:0000000000000786 .LASF86
     /tmp/ccwaWI4b.s:2929   .debug_str:00000000000002ea .LASF87
     /tmp/ccwaWI4b.s:2891   .debug_str:000000000000019b .LASF88
     /tmp/ccwaWI4b.s:2955   .debug_str:00000000000003ce .LASF89
     /tmp/ccwaWI4b.s:2953   .debug_str:00000000000003ba .LASF90
     /tmp/ccwaWI4b.s:2991   .debug_str:00000000000004ce .LASF91
     /tmp/ccwaWI4b.s:2935   .debug_str:000000000000030c .LASF92
     /tmp/ccwaWI4b.s:2939   .debug_str:0000000000000325 .LASF93
     /tmp/ccwaWI4b.s:2947   .debug_str:000000000000036d .LASF94
     /tmp/ccwaWI4b.s:2899   .debug_str:00000000000001bf .LASF97
     /tmp/ccwaWI4b.s:3055   .debug_str:0000000000000748 .LASF98
     /tmp/ccwaWI4b.s:2915   .debug_str:000000000000025b .LASF99
     /tmp/ccwaWI4b.s:2983   .debug_str:00000000000004a2 .LASF100
     /tmp/ccwaWI4b.s:3027   .debug_str:00000000000005b4 .LASF101
     /tmp/ccwaWI4b.s:2847   .debug_str:0000000000000050 .LASF102
     /tmp/ccwaWI4b.s:2977   .debug_str:0000000000000461 .LASF103
     /tmp/ccwaWI4b.s:3059   .debug_str:0000000000000762 .LASF105
     /tmp/ccwaWI4b.s:183    .text:00000000000000d4 .LFB41
     /tmp/ccwaWI4b.s:430    .text:0000000000000238 .LFE41
     /tmp/ccwaWI4b.s:2895   .debug_str:00000000000001b1 .LASF109
     /tmp/ccwaWI4b.s:2542   .debug_loc:0000000000000000 .LLST5
     /tmp/ccwaWI4b.s:2584   .debug_loc:00000000000000be .LLST6
     /tmp/ccwaWI4b.s:2626   .debug_loc:000000000000017c .LLST7
     /tmp/ccwaWI4b.s:2811   .debug_ranges:0000000000000000 .Ldebug_ranges0
     /tmp/ccwaWI4b.s:2913   .debug_str:0000000000000256 .LASF106
     /tmp/ccwaWI4b.s:2657   .debug_loc:0000000000000211 .LLST8
     /tmp/ccwaWI4b.s:2849   .debug_str:0000000000000060 .LASF107
     /tmp/ccwaWI4b.s:2681   .debug_loc:0000000000000281 .LLST9
     /tmp/ccwaWI4b.s:344    .text:00000000000001bc .LBB14
     /tmp/ccwaWI4b.s:374    .text:00000000000001ec .LBE14
     /tmp/ccwaWI4b.s:2845   .debug_str:000000000000004b .LASF108
     /tmp/ccwaWI4b.s:2704   .debug_loc:00000000000002f0 .LLST11
     /tmp/ccwaWI4b.s:350    .text:00000000000001c8 .LVL30
     /tmp/ccwaWI4b.s:378    .text:00000000000001f0 .LBB15
     /tmp/ccwaWI4b.s:418    .text:0000000000000230 .LBE15
     /tmp/ccwaWI4b.s:2711   .debug_loc:0000000000000313 .LLST12
     /tmp/ccwaWI4b.s:384    .text:00000000000001fc .LVL34
     /tmp/ccwaWI4b.s:2718   .debug_loc:0000000000000336 .LLST10
     /tmp/ccwaWI4b.s:282    .text:0000000000000170 .LVL23
     /tmp/ccwaWI4b.s:250    .text:000000000000013c .LVL20
     /tmp/ccwaWI4b.s:88     .text:0000000000000058 .LFB40
     /tmp/ccwaWI4b.s:177    .text:00000000000000d4 .LFE40
     /tmp/ccwaWI4b.s:2729   .debug_loc:000000000000036c .LLST1
     /tmp/ccwaWI4b.s:2923   .debug_str:00000000000002b7 .LASF110
GAS LISTING /tmp/ccwaWI4b.s 			page 19


     /tmp/ccwaWI4b.s:2747   .debug_loc:00000000000003b8 .LLST2
     /tmp/ccwaWI4b.s:117    .text:0000000000000080 .LBB6
     /tmp/ccwaWI4b.s:125    .text:0000000000000084 .LBE6
     /tmp/ccwaWI4b.s:2758   .debug_loc:00000000000003ee .LLST3
     /tmp/ccwaWI4b.s:2766   .debug_loc:0000000000000412 .LLST4
     /tmp/ccwaWI4b.s:130    .text:0000000000000090 .LVL9
     /tmp/ccwaWI4b.s:135    .text:000000000000009c .LVL10
     /tmp/ccwaWI4b.s:46     .text:000000000000002c .LFB39
     /tmp/ccwaWI4b.s:82     .text:0000000000000058 .LFE39
     /tmp/ccwaWI4b.s:2773   .debug_loc:0000000000000435 .LLST0
     /tmp/ccwaWI4b.s:10     .text:0000000000000000 .LFB38
     /tmp/ccwaWI4b.s:40     .text:000000000000002c .LFE38
     /tmp/ccwaWI4b.s:3043   .debug_str:00000000000006fb .LASF111
     /tmp/ccwaWI4b.s:2909   .debug_str:0000000000000224 .LASF112
     /tmp/ccwaWI4b.s:186    .text:00000000000000d4 .LVL14
     /tmp/ccwaWI4b.s:248    .text:0000000000000134 .LVL19
     /tmp/ccwaWI4b.s:270    .text:0000000000000160 .LVL21
     /tmp/ccwaWI4b.s:280    .text:0000000000000168 .LVL22
     /tmp/ccwaWI4b.s:325    .text:00000000000001a8 .LVL26
     /tmp/ccwaWI4b.s:332    .text:00000000000001b4 .LVL28
     /tmp/ccwaWI4b.s:348    .text:00000000000001c0 .LVL29
     /tmp/ccwaWI4b.s:376    .text:00000000000001f0 .LVL32
     /tmp/ccwaWI4b.s:382    .text:00000000000001f4 .LVL33
     /tmp/ccwaWI4b.s:328    .text:00000000000001ac .LVL27
     /tmp/ccwaWI4b.s:217    .text:0000000000000110 .LVL15
     /tmp/ccwaWI4b.s:242    .text:0000000000000130 .LVL18
     /tmp/ccwaWI4b.s:302    .text:000000000000018c .LVL24
     /tmp/ccwaWI4b.s:364    .text:00000000000001dc .LVL31
     /tmp/ccwaWI4b.s:407    .text:0000000000000220 .LVL35
     /tmp/ccwaWI4b.s:410    .text:0000000000000228 .LVL36
     /tmp/ccwaWI4b.s:232    .text:0000000000000124 .LVL16
     /tmp/ccwaWI4b.s:239    .text:000000000000012c .LVL17
     /tmp/ccwaWI4b.s:304    .text:0000000000000190 .LVL25
     /tmp/ccwaWI4b.s:416    .text:0000000000000230 .LVL37
     /tmp/ccwaWI4b.s:91     .text:0000000000000058 .LVL5
     /tmp/ccwaWI4b.s:106    .text:0000000000000078 .LVL6
     /tmp/ccwaWI4b.s:172    .text:00000000000000cc .LVL13
     /tmp/ccwaWI4b.s:150    .text:00000000000000ac .LVL11
     /tmp/ccwaWI4b.s:159    .text:00000000000000bc .LVL12
     /tmp/ccwaWI4b.s:116    .text:0000000000000080 .LVL7
     /tmp/ccwaWI4b.s:123    .text:0000000000000084 .LVL8
     /tmp/ccwaWI4b.s:49     .text:000000000000002c .LVL1
     /tmp/ccwaWI4b.s:64     .text:0000000000000044 .LVL2
     /tmp/ccwaWI4b.s:74     .text:0000000000000050 .LVL3
     /tmp/ccwaWI4b.s:79     .text:0000000000000054 .LVL4
     /tmp/ccwaWI4b.s:439    .debug_info:0000000000000000 .Ldebug_info0
     /tmp/ccwaWI4b.s:108    .text:0000000000000078 .LBB5
     /tmp/ccwaWI4b.s:137    .text:000000000000009c .LBE5
     /tmp/ccwaWI4b.s:148    .text:00000000000000ac .LBB8
     /tmp/ccwaWI4b.s:161    .text:00000000000000bc .LBE8
     /tmp/ccwaWI4b.s:214    .text:000000000000010c .LBB10
     /tmp/ccwaWI4b.s:244    .text:0000000000000130 .LBE10
     /tmp/ccwaWI4b.s:272    .text:0000000000000160 .LBB18
     /tmp/ccwaWI4b.s:308    .text:0000000000000190 .LBE18
     /tmp/ccwaWI4b.s:337    .text:00000000000001b4 .LBB19
     /tmp/ccwaWI4b.s:427    .text:0000000000000238 .LBE19
     /tmp/ccwaWI4b.s:276    .text:0000000000000164 .LBB12
GAS LISTING /tmp/ccwaWI4b.s 			page 20


     /tmp/ccwaWI4b.s:306    .text:0000000000000190 .LBE12
     /tmp/ccwaWI4b.s:420    .text:0000000000000230 .LBB16
     /tmp/ccwaWI4b.s:425    .text:0000000000000238 .LBE16

UNDEFINED SYMBOLS
_ZN9Scheduler3putEP3TCB
__mem_free
__mem_alloc
